// Useful Prisma Schema visualizer https://prisma-editor.vercel.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id              String           @id @default(uuid())
  createdAt       DateTime         @default(now())
  metadata        Json
  firstName       String
  lastName        String
  DOB             DateTime
  role            String
  jits            Jit[]
  userCurriculums UserCurriculum[]

  @@index([id])
}

model Jit {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  metadata      Json
  sessions      Session[]
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  curriculum    Curriculum    @relation(fields: [curriculumId], references: [id])
  curriculumId  String
  isFavorite    Boolean
  isGoal        Boolean
  jitCategories JitCategory[]
  jitPositions  JitPosition[]
  jitMoves      JitMove[]
  notes         String

  @@index([userId])
  @@index([curriculumId])
}

model Category {
  id            String        @id @default(uuid())
  name          String
  metadata      Json
  jitCategories JitCategory[]
}

model Position {
  id           String        @id @default(uuid())
  name         String
  metadata     Json
  jitPositions JitPosition[]
}

model Move {
  id       String    @id @default(uuid())
  name     String
  metadata Json
  jitMoves JitMove[]
}

model Curriculum {
  id              String           @id @default(uuid())
  metadata        Json
  userCurriculums UserCurriculum[]
  jits            Jit[]
}

model Session {
  id       String @id @default(uuid())
  jit      Jit    @relation(fields: [jitId], references: [id])
  jitId    String
  metadata Json

  @@index([jitId])
}

model UserCurriculum {
  id           String     @id @default(uuid())
  metadata     Json
  user         User       @relation(fields: [userId], references: [id])
  userId       String
  curriculum   Curriculum @relation(fields: [curriculumId], references: [id])
  curriculumId String
  isActive     Boolean

  @@index([userId])
  @@index([curriculumId])
}

model JitCategory {
  jitId      String
  categoryId String
  Jit        Jit      @relation(fields: [jitId], references: [id])
  Category   Category @relation(fields: [categoryId], references: [id])

  @@id([jitId])
  @@index([jitId])
  @@index([categoryId])
}

model JitPosition {
  jitId      String
  positionId String
  Jit        Jit      @relation(fields: [jitId], references: [id])
  Position   Position @relation(fields: [positionId], references: [id])

  @@id([jitId, positionId])
  @@index([jitId])
  @@index([positionId])
}

model JitMove {
  jitId  String
  moveId String
  Jit    Jit    @relation(fields: [jitId], references: [id])
  Move   Move   @relation(fields: [moveId], references: [id])

  @@id([jitId, moveId])
  @@index([jitId])
  @@index([moveId])
}
